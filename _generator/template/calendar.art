<div id="calendar">
	<a class="cal-today" href="">Today</a>
	{{if dayOfWeek != 0}}
		<div class="cal-date-spacer" style="grid-column-end:{{ dayOfWeek + 1 }};"></div>
	{{/if}}
	{{each range(1, 12) month}}
		{{each expectedMonthRange[month] day}}
			<a class="cal-date" href="/{{monthNames[month]}}/{{day}}" data-month="{{month}}" data-day="{{day}}">
				{{shortMonthNames[month]}}<br>{{day}}
			</a>
		{{/each}}
	{{/each}}
</div>


<script>
	function updateToday() {
		var eleToday = document.querySelector('a.cal-today')
		var d = new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric' })
		eleToday.href = '/' + d.replace(' ', '/')
	}

	updateToday()

	setInterval(updateToday, 1000)

	Array.prototype.forEach.call(document.querySelectorAll('a.cal-date'), function(dateEle){
		var month = localStorage.getItem( dateEle.dataset.month )
		var dayStatus = null
		if (month) {
			dayStatus = JSON.parse(month)[ dateEle.dataset.day ]
		}
		if (dayStatus === 1) {
			dateEle.classList.add('completed')
		}
	})

	document.getElementById('calendar').oncontextmenu = function (ev) {
		var dateEle = ev.target
		//console.log('ev', ev)
		if (dateEle.classList.contains('cal-date')) {
			ev.preventDefault()
			ev.stopPropagation()
			var completed = dateEle.classList.contains('completed')
			markDayAs(dateEle.dataset.month, dateEle.dataset.day, !completed)
			if (completed) {
				dateEle.classList.remove('completed')
			} else {
				dateEle.classList.add('completed')
			}
		}
	}

	function readSavedMonth(month) {
		return JSON.parse(localStorage.getItem(month) || '[]')
	}
	function writeSavedMonth(month, monthData) {
		localStorage.setItem(month, JSON.stringify(monthData))
	}

	function markDayAs(month, day, complete){
		var monthData = readSavedMonth(month)
		// var wasComplete = monthData[day] === 1
		monthData[day] = complete ? 1 : 0
		writeSavedMonth(month, monthData)
	}
</script>
	